x <- sort(unique(strtrim(gsub("[^0-9a-z]", "", tolower(ta$payor_iban)), width = 2)))
payor_country <- lapply(x, function(x) grepl(x, gsub("[^0-9a-z]", "", tolower(ta$payor_iban))))
names(payor_country) <- x
x <- sort(unique(strtrim(gsub("[^0-9a-z]", "", tolower(ta$payee_iban)), width = 2)))
payee_country <- lapply(x, function(x) grepl(x, gsub("[^0-9a-z]", "", tolower(ta$payee_iban))))
names(payee_country) <- x
# bank code
x <- sort(unique(strtrim(gsub("[^0-9a-z]", "", tolower(ta$payor_bic)), width = 4)))
payor_bank <- lapply(x, function(x) grepl(x, gsub("[^0-9a-z]", "", tolower(ta$payor_bic))))
names(payor_bank) <- x
x <- sort(unique(strtrim(gsub("[^0-9a-z]", "", tolower(ta$payee_bic)), width = 4)))
payee_bank <- lapply(x, function(x) grepl(x, gsub("[^0-9a-z]", "", tolower(ta$payee_bic))))
names(payee_bank) <- x
# owners
x <- sort(unique(gsub("[^a-z0-9]", "", tolower(ta$payor_owner))))
payor_owner <- lapply(x, function(x) grepl(tolower(x), gsub("[^a-z 0-9]", "", tolower(ta$payor_owner))))
names(payor_owner) <- x
x <- sort(unique(gsub("[^a-z0-9]", "", tolower(ta$payee_owner))))
payee_owner <- lapply(x, function(x) grepl(tolower(x), gsub("[^a-z 0-9]", "", tolower(ta$payee_owner))))
names(payee_owner) <- x
# own accounts
x <- sort(unique(pa$account_id[pa$account_id %in% ta$payor_id]))
payor_pa <- lapply(x, function(x) x == ta$payor_id)
names(payor_pa) <- x
x <- sort(unique(pa$account_id[pa$account_id %in% ta$payee_id]))
payee_pa <- lapply(x, function(x) x == ta$payee_id)
names(payee_pa) <- x
# reference
reference <- gsub("[^a-z ]", "", tolower(ta$reference))
x <- sort(unique(unlist(strsplit(reference, " "))))
reference <- lapply(x, function(x) grepl(x, reference))
names(reference) <- x
# entry
entry <- gsub("[^a-z ]", "", tolower(ta$entry))
x <- sort(unique(unlist(strsplit(entry, " "))))
entry <- lapply(x, function(x) grepl(x, entry))
names(entry) <- x
# value
ta$value <- as.integer(ta$value)
value <- list(mod5 = ta$value %% 500 == 0, mod50 = ta$value %% 5000 == 0, mod100 = ta$value %% 10000 == 0, ge100 = ta$value >= 10000)
# return feature list and abt
feats <- c( "payor_country", "payee_country", "payor_bank", "payee_bank", "payor_owner", "payee_owner", "payor_pa", "payee_pa",
"reference", "entry", "value")
features <- data.frame( name = unlist(lapply( feats, function(x) rep(x, length(get(x, envir = env))) )),
value = unlist(lapply( feats, function(x) names(get(x, envir = env)) )) )
abt <- do.call(cbind, unlist(lapply(feats, get, envir = env), recursive = FALSE))
colnames(abt) <- paste(features$name, features$value, sep = ":")
mode(abt) <- "integer"
class(abt) <- "ABT"
class(features) <- "FeatureList"
return(list(ABT = abt, FeatureList = features))
}
res <- FeatureExtraction(df, df2)
feats <- res$FeatureList
colnames(res$ABT)
df <- data.frame(
payor_id = 1:4, payor_owner = rep("a\\s[] d:.", 4), payor_iban = c("D\\E000342", "ENasd/;:.,", "es1234", "_d-#üäeö"), payor_bic = rep("as\\Df_`\\[]{}()"),
payee_id = 4:1, payee_owner = rep("a\\s[] d:.", 4), payee_iban = c("DE000342", "EN\\[]{}/()", "es1234", "d_e1~*#!$%"), payee_bic = rep("asDf&^°|<>"),
date = c("2010-1-1", "2010-01-01", "1990-1-1", "1990-01-01"),
reference = c("as_d üäö:,|as\\d_%&/´", "t_e;üsö:,|t\\_%$§/´", "test test", "asd"),
entry = c("as#'d üäö:^°as\\d_%&/´", "t_e(;))üsö:,|t\\_%$[§]/´", "test te{s}\\t", "asd"),
value = c("500", "10000", "50219", "0")
)
res <- FeatureExtraction(df, df2)
feats <- res$FeatureList
colnames(res$ABT)
expect_equal(as.character(unique(feats$value[grepl("reference", feats$name)])), c("asd", "test"))
expect_equal(as.character(unique(feats$value[grepl("entry", feats$name)])), c("asd", "test"))
abt <- res$ABT
abt
as.matrix(abt)
prmatrix(abt)
colnames(abt) <- NULL
abt
FeatureExtraction <- function( ta, pa )
{
env <- environment()
# country code
x <- sort(unique(strtrim(gsub("[^0-9a-z]", "", tolower(ta$payor_iban)), width = 2)))
payor_country <- lapply(x, function(x) grepl(x, gsub("[^0-9a-z]", "", tolower(ta$payor_iban))))
names(payor_country) <- x
x <- sort(unique(strtrim(gsub("[^0-9a-z]", "", tolower(ta$payee_iban)), width = 2)))
payee_country <- lapply(x, function(x) grepl(x, gsub("[^0-9a-z]", "", tolower(ta$payee_iban))))
names(payee_country) <- x
# bank code
x <- sort(unique(strtrim(gsub("[^0-9a-z]", "", tolower(ta$payor_bic)), width = 4)))
payor_bank <- lapply(x, function(x) grepl(x, gsub("[^0-9a-z]", "", tolower(ta$payor_bic))))
names(payor_bank) <- x
x <- sort(unique(strtrim(gsub("[^0-9a-z]", "", tolower(ta$payee_bic)), width = 4)))
payee_bank <- lapply(x, function(x) grepl(x, gsub("[^0-9a-z]", "", tolower(ta$payee_bic))))
names(payee_bank) <- x
# owners
x <- sort(unique(gsub("[^a-z0-9 ]", "", tolower(ta$payor_owner))))
payor_owner <- lapply(x, function(x) grepl(tolower(x), gsub("[^a-z 0-9]", "", tolower(ta$payor_owner))))
names(payor_owner) <- x
x <- sort(unique(gsub("[^a-z0-9 ]", "", tolower(ta$payee_owner))))
payee_owner <- lapply(x, function(x) grepl(tolower(x), gsub("[^a-z 0-9]", "", tolower(ta$payee_owner))))
names(payee_owner) <- x
# own accounts
x <- sort(unique(pa$account_id[pa$account_id %in% ta$payor_id]))
payor_pa <- lapply(x, function(x) x == ta$payor_id)
names(payor_pa) <- x
x <- sort(unique(pa$account_id[pa$account_id %in% ta$payee_id]))
payee_pa <- lapply(x, function(x) x == ta$payee_id)
names(payee_pa) <- x
# reference
reference <- gsub("[^a-z ]", "", tolower(ta$reference))
x <- sort(unique(unlist(strsplit(reference, " "))))
reference <- lapply(x, function(x) grepl(x, reference))
names(reference) <- x
# entry
entry <- gsub("[^a-z ]", "", tolower(ta$entry))
x <- sort(unique(unlist(strsplit(entry, " "))))
entry <- lapply(x, function(x) grepl(x, entry))
names(entry) <- x
# value
ta$value <- as.integer(ta$value)
value <- list(mod5 = ta$value %% 500 == 0, mod50 = ta$value %% 5000 == 0, mod100 = ta$value %% 10000 == 0, ge100 = ta$value >= 10000)
# return feature list and abt
feats <- c( "payor_country", "payee_country", "payor_bank", "payee_bank", "payor_owner", "payee_owner", "payor_pa", "payee_pa",
"reference", "entry", "value")
features <- data.frame( name = unlist(lapply( feats, function(x) rep(x, length(get(x, envir = env))) )),
value = unlist(lapply( feats, function(x) names(get(x, envir = env)) )) )
abt <- do.call(cbind, unlist(lapply(feats, get, envir = env), recursive = FALSE))
colnames(abt) <- paste(features$name, features$value, sep = ":")
mode(abt) <- "integer"
class(abt) <- "ABT"
class(features) <- "FeatureList"
return(list(ABT = abt, FeatureList = features))
}
res <- FeatureExtraction(df, df2)
feats <- res$FeatureList
abt <- res$ABT
abt
exp <- cbind(c(1,0,0,1), c(0,1,0,0), c(0,0,1))
as.integer(c("500", "10000"))
as.integer(c("500", "10000"))%%500
a <- c("500", "10000")
a <- as.integer(a)
list(mod5 = a %% 500)
list(mod5 = a %% 500 == 0)
list(mod5 = a %% 500 == 0, mod100 = a %% 10000 == 0)
b <- list(mod5 = a %% 500 == 0, mod100 = a %% 10000 == 0)
b
FeatureExtraction <- function( ta, pa )
{
env <- environment()
# country code
x <- sort(unique(strtrim(gsub("[^0-9a-z]", "", tolower(ta$payor_iban)), width = 2)))
payor_country <- lapply(x, function(x) grepl(x, gsub("[^0-9a-z]", "", tolower(ta$payor_iban))))
names(payor_country) <- x
x <- sort(unique(strtrim(gsub("[^0-9a-z]", "", tolower(ta$payee_iban)), width = 2)))
payee_country <- lapply(x, function(x) grepl(x, gsub("[^0-9a-z]", "", tolower(ta$payee_iban))))
names(payee_country) <- x
# bank code
x <- sort(unique(strtrim(gsub("[^0-9a-z]", "", tolower(ta$payor_bic)), width = 4)))
payor_bank <- lapply(x, function(x) grepl(x, gsub("[^0-9a-z]", "", tolower(ta$payor_bic))))
names(payor_bank) <- x
x <- sort(unique(strtrim(gsub("[^0-9a-z]", "", tolower(ta$payee_bic)), width = 4)))
payee_bank <- lapply(x, function(x) grepl(x, gsub("[^0-9a-z]", "", tolower(ta$payee_bic))))
names(payee_bank) <- x
# owners
x <- sort(unique(gsub("[^a-z0-9 ]", "", tolower(ta$payor_owner))))
payor_owner <- lapply(x, function(x) grepl(tolower(x), gsub("[^a-z 0-9]", "", tolower(ta$payor_owner))))
names(payor_owner) <- x
x <- sort(unique(gsub("[^a-z0-9 ]", "", tolower(ta$payee_owner))))
payee_owner <- lapply(x, function(x) grepl(tolower(x), gsub("[^a-z 0-9]", "", tolower(ta$payee_owner))))
names(payee_owner) <- x
# own accounts
x <- sort(unique(pa$account_id[pa$account_id %in% ta$payor_id]))
payor_pa <- lapply(x, function(x) x == ta$payor_id)
names(payor_pa) <- x
x <- sort(unique(pa$account_id[pa$account_id %in% ta$payee_id]))
payee_pa <- lapply(x, function(x) x == ta$payee_id)
names(payee_pa) <- x
# reference
reference <- gsub("[^a-z ]", "", tolower(ta$reference))
x <- sort(unique(unlist(strsplit(reference, " "))))
reference <- lapply(x, function(x) grepl(x, reference))
names(reference) <- x
# entry
entry <- gsub("[^a-z ]", "", tolower(ta$entry))
x <- sort(unique(unlist(strsplit(entry, " "))))
entry <- lapply(x, function(x) grepl(x, entry))
names(entry) <- x
# value
ta$value <- as.integer(ta$value)
value <- list(mod5 = ta$value %% 500 == 0, mod50 = ta$value %% 5000 == 0, mod100 = ta$value %% 10000 == 0, ge100 = ta$value >= 10000)
return(value)
# return feature list and abt
feats <- c( "payor_country", "payee_country", "payor_bank", "payee_bank", "payor_owner", "payee_owner", "payor_pa", "payee_pa",
"reference", "entry", "value")
features <- data.frame( name = unlist(lapply( feats, function(x) rep(x, length(get(x, envir = env))) )),
value = unlist(lapply( feats, function(x) names(get(x, envir = env)) )) )
abt <- do.call(cbind, unlist(lapply(feats, get, envir = env), recursive = FALSE))
colnames(abt) <- paste(features$name, features$value, sep = ":")
mode(abt) <- "integer"
class(abt) <- "ABT"
class(features) <- "FeatureList"
return(list(ABT = abt, FeatureList = features))
}
res <- FeatureExtraction(df, df2)
res
FeatureExtraction <- function( ta, pa )
{
env <- environment()
# country code
x <- sort(unique(strtrim(gsub("[^0-9a-z]", "", tolower(ta$payor_iban)), width = 2)))
payor_country <- lapply(x, function(x) grepl(x, gsub("[^0-9a-z]", "", tolower(ta$payor_iban))))
names(payor_country) <- x
x <- sort(unique(strtrim(gsub("[^0-9a-z]", "", tolower(ta$payee_iban)), width = 2)))
payee_country <- lapply(x, function(x) grepl(x, gsub("[^0-9a-z]", "", tolower(ta$payee_iban))))
names(payee_country) <- x
# bank code
x <- sort(unique(strtrim(gsub("[^0-9a-z]", "", tolower(ta$payor_bic)), width = 4)))
payor_bank <- lapply(x, function(x) grepl(x, gsub("[^0-9a-z]", "", tolower(ta$payor_bic))))
names(payor_bank) <- x
x <- sort(unique(strtrim(gsub("[^0-9a-z]", "", tolower(ta$payee_bic)), width = 4)))
payee_bank <- lapply(x, function(x) grepl(x, gsub("[^0-9a-z]", "", tolower(ta$payee_bic))))
names(payee_bank) <- x
# owners
x <- sort(unique(gsub("[^a-z0-9 ]", "", tolower(ta$payor_owner))))
payor_owner <- lapply(x, function(x) grepl(tolower(x), gsub("[^a-z 0-9]", "", tolower(ta$payor_owner))))
names(payor_owner) <- x
x <- sort(unique(gsub("[^a-z0-9 ]", "", tolower(ta$payee_owner))))
payee_owner <- lapply(x, function(x) grepl(tolower(x), gsub("[^a-z 0-9]", "", tolower(ta$payee_owner))))
names(payee_owner) <- x
# own accounts
x <- sort(unique(pa$account_id[pa$account_id %in% ta$payor_id]))
payor_pa <- lapply(x, function(x) x == ta$payor_id)
names(payor_pa) <- x
x <- sort(unique(pa$account_id[pa$account_id %in% ta$payee_id]))
payee_pa <- lapply(x, function(x) x == ta$payee_id)
names(payee_pa) <- x
# reference
reference <- gsub("[^a-z ]", "", tolower(ta$reference))
x <- sort(unique(unlist(strsplit(reference, " "))))
reference <- lapply(x, function(x) grepl(x, reference))
names(reference) <- x
# entry
entry <- gsub("[^a-z ]", "", tolower(ta$entry))
x <- sort(unique(unlist(strsplit(entry, " "))))
entry <- lapply(x, function(x) grepl(x, entry))
names(entry) <- x
# value
print(ta$value)
ta$value <- as.integer(ta$value)
return(ta$value)
value <- list(mod5 = ta$value %% 500 == 0, mod50 = ta$value %% 5000 == 0, mod100 = ta$value %% 10000 == 0, ge100 = ta$value >= 10000)
# return feature list and abt
feats <- c( "payor_country", "payee_country", "payor_bank", "payee_bank", "payor_owner", "payee_owner", "payor_pa", "payee_pa",
"reference", "entry", "value")
features <- data.frame( name = unlist(lapply( feats, function(x) rep(x, length(get(x, envir = env))) )),
value = unlist(lapply( feats, function(x) names(get(x, envir = env)) )) )
abt <- do.call(cbind, unlist(lapply(feats, get, envir = env), recursive = FALSE))
colnames(abt) <- paste(features$name, features$value, sep = ":")
mode(abt) <- "integer"
class(abt) <- "ABT"
class(features) <- "FeatureList"
return(list(ABT = abt, FeatureList = features))
}
res <- FeatureExtraction(df, df2)
res
factor(c("500", "1000"))
as.integer(factor(c("500", "1000")))
as.integer(as.character(factor(c("500", "1000"))))
FeatureExtraction <- function( ta, pa )
{
env <- environment()
# country code
x <- sort(unique(strtrim(gsub("[^0-9a-z]", "", tolower(ta$payor_iban)), width = 2)))
payor_country <- lapply(x, function(x) grepl(x, gsub("[^0-9a-z]", "", tolower(ta$payor_iban))))
names(payor_country) <- x
x <- sort(unique(strtrim(gsub("[^0-9a-z]", "", tolower(ta$payee_iban)), width = 2)))
payee_country <- lapply(x, function(x) grepl(x, gsub("[^0-9a-z]", "", tolower(ta$payee_iban))))
names(payee_country) <- x
# bank code
x <- sort(unique(strtrim(gsub("[^0-9a-z]", "", tolower(ta$payor_bic)), width = 4)))
payor_bank <- lapply(x, function(x) grepl(x, gsub("[^0-9a-z]", "", tolower(ta$payor_bic))))
names(payor_bank) <- x
x <- sort(unique(strtrim(gsub("[^0-9a-z]", "", tolower(ta$payee_bic)), width = 4)))
payee_bank <- lapply(x, function(x) grepl(x, gsub("[^0-9a-z]", "", tolower(ta$payee_bic))))
names(payee_bank) <- x
# owners
x <- sort(unique(gsub("[^a-z0-9 ]", "", tolower(ta$payor_owner))))
payor_owner <- lapply(x, function(x) grepl(tolower(x), gsub("[^a-z 0-9]", "", tolower(ta$payor_owner))))
names(payor_owner) <- x
x <- sort(unique(gsub("[^a-z0-9 ]", "", tolower(ta$payee_owner))))
payee_owner <- lapply(x, function(x) grepl(tolower(x), gsub("[^a-z 0-9]", "", tolower(ta$payee_owner))))
names(payee_owner) <- x
# own accounts
x <- sort(unique(pa$account_id[pa$account_id %in% ta$payor_id]))
payor_pa <- lapply(x, function(x) x == ta$payor_id)
names(payor_pa) <- x
x <- sort(unique(pa$account_id[pa$account_id %in% ta$payee_id]))
payee_pa <- lapply(x, function(x) x == ta$payee_id)
names(payee_pa) <- x
# reference
reference <- gsub("[^a-z ]", "", tolower(ta$reference))
x <- sort(unique(unlist(strsplit(reference, " "))))
reference <- lapply(x, function(x) grepl(x, reference))
names(reference) <- x
# entry
entry <- gsub("[^a-z ]", "", tolower(ta$entry))
x <- sort(unique(unlist(strsplit(entry, " "))))
entry <- lapply(x, function(x) grepl(x, entry))
names(entry) <- x
# value
ta$value <- as.integer(as.character(ta$value))
value <- list(mod5 = ta$value %% 500 == 0, mod50 = ta$value %% 5000 == 0, mod100 = ta$value %% 10000 == 0, ge100 = ta$value >= 10000)
# return feature list and abt
feats <- c( "payor_country", "payee_country", "payor_bank", "payee_bank", "payor_owner", "payee_owner", "payor_pa", "payee_pa",
"reference", "entry", "value")
features <- data.frame( name = unlist(lapply( feats, function(x) rep(x, length(get(x, envir = env))) )),
value = unlist(lapply( feats, function(x) names(get(x, envir = env)) )) )
abt <- do.call(cbind, unlist(lapply(feats, get, envir = env), recursive = FALSE))
colnames(abt) <- paste(features$name, features$value, sep = ":")
mode(abt) <- "integer"
class(abt) <- "ABT"
class(features) <- "FeatureList"
return(list(ABT = abt, FeatureList = features))
}
res <- FeatureExtraction(df, df2)
feats <- res$FeatureList
abt <- res$ABT
abt
100000 %% 500 == 0
exp <- cbind(c(1,0,0,1), c(0,1,0,0), c(0,0,1,0))
exp
exp <- cbind(exp, exp)
exp
exp <- cbind(exp, matrix(1,4,4), c(1,0,0,0), c(0,0,0,1), c(1,0,0,1), c(0,1,1,0), c(1,0,0,1), c(0,1,1,0),
c(1,1,0,1), c(0,1,0,1), c(0,1,0,1), c(0,1,1,0))
exp
exp == abt
expect_equal(exp, abt)
abt <- as.matrix(res$ABT)
abt
abt <- matrix(res$ABT, 4, 20)
abt
expect_equal(exp, abt)
test_that("Feature Extraction", {
df <- data.frame(
payor_id = 1:4, payor_owner = rep("a\\s[] d:.", 4), payor_iban = c("D\\E000342", "ENasd/;:.,", "es1234", "_d-#üäeö"), payor_bic = rep("as\\Df_`\\[]{}()"),
payee_id = 4:1, payee_owner = rep("a\\s[] d:.", 4), payee_iban = c("DE000342", "EN\\[]{}/()", "es1234", "d_e1~*#!$%"), payee_bic = rep("asDf&^°|<>"),
date = c("2010-1-1", "2010-01-01", "1990-1-1", "1990-01-01"),
reference = c("as_d üäö:,|as\\d_%&/´", "t_e;üsö:,|t\\_%$§/´", "test test", "asd"),
entry = c("as#'d üäö:^°as\\d_%&/´", "t_e(;))üsö:,|t\\_%$[§]/´", "test te{s}\\t", "asd"),
value = c("500", "10000", "50219", "0")
)
df2 <- data.frame(account_id = 1)
exp <- cbind(c(1,0,0,1), c(0,1,0,0), c(0,0,1,0))
exp <- cbind(exp, exp)
exp <- cbind(exp, matrix(1,4,4), c(1,0,0,0), c(0,0,0,1), c(1,0,0,1), c(0,1,1,0), c(1,0,0,1), c(0,1,1,0),
c(1,1,0,1), c(0,1,0,1), c(0,1,0,1), c(0,1,1,0))
res <- FeatureExtraction(df, df2)
feats <- res$FeatureList
abt <- matrix(res$ABT, 4, 20)
expect_equal(as.character(unique(feats$value[grepl("country", feats$name)])), c("de", "en", "es"))
expect_equal(as.character(unique(feats$value[grepl("owner", feats$name)])), "asd")
expect_equal(as.character(unique(feats$value[grepl("bank", feats$name)])), "asdf")
expect_equal(as.character(unique(feats$value[grepl("reference", feats$name)])), c("asd", "test"))
expect_equal(as.character(unique(feats$value[grepl("entry", feats$name)])), c("asd", "test"))
expect_equal(exp, abt)
})
expect_equal(as.character(unique(feats$value[grepl("owner", feats$name)])), "asd")
expect_equal(as.character(unique(feats$value[grepl("owner", feats$name)])), "asdd")
expect_equal(as.character(unique(feats$value[grepl("owner", feats$name)])), "as d")
test_that("Feature Extraction", {
df <- data.frame(
payor_id = 1:4, payor_owner = rep("a\\s[] d:.", 4), payor_iban = c("D\\E000342", "ENasd/;:.,", "es1234", "_d-#üäeö"), payor_bic = rep("as\\Df_`\\[]{}()"),
payee_id = 4:1, payee_owner = rep("a\\s[] d:.", 4), payee_iban = c("DE000342", "EN\\[]{}/()", "es1234", "d_e1~*#!$%"), payee_bic = rep("asDf&^°|<>"),
date = c("2010-1-1", "2010-01-01", "1990-1-1", "1990-01-01"),
reference = c("as_d üäö:,|as\\d_%&/´", "t_e;üsö:,|t\\_%$§/´", "test test", "asd"),
entry = c("as#'d üäö:^°as\\d_%&/´", "t_e(;))üsö:,|t\\_%$[§]/´", "test te{s}\\t", "asd"),
value = c("500", "10000", "50219", "0")
)
df2 <- data.frame(account_id = 1)
exp <- cbind(c(1,0,0,1), c(0,1,0,0), c(0,0,1,0))
exp <- cbind(exp, exp)
exp <- cbind(exp, matrix(1,4,4), c(1,0,0,0), c(0,0,0,1), c(1,0,0,1), c(0,1,1,0), c(1,0,0,1), c(0,1,1,0),
c(1,1,0,1), c(0,1,0,1), c(0,1,0,1), c(0,1,1,0))
res <- FeatureExtraction(df, df2)
feats <- res$FeatureList
abt <- matrix(res$ABT, 4, 20)
expect_equal(as.character(unique(feats$value[grepl("country", feats$name)])), c("de", "en", "es"))
expect_equal(as.character(unique(feats$value[grepl("owner", feats$name)])), "as d")
expect_equal(as.character(unique(feats$value[grepl("bank", feats$name)])), "asdf")
expect_equal(as.character(unique(feats$value[grepl("reference", feats$name)])), c("asd", "test"))
expect_equal(as.character(unique(feats$value[grepl("entry", feats$name)])), c("asd", "test"))
expect_equal(exp, abt)
})
devtools::install()
library(testthat)
library(abacus)
matrix(c(1:60, 10, 6))
matrix(1:60, 10, 6)
abt1 <- matrix(1:60, 10, 6)
feats1 <- data.frame(name = rep(letters[1:3], each = 2), value = letters[1:6])
feats1
cbind(1:10, 11:20, 21:30, 31:40, rep(0, 10), 51:60)
Conversion <- function(x)
{
UseMethod("Conversion", x)
}
UseMethod()
?UseMethod
Conversion <- function( abt )
{
UseMethod("Conversion", abt)
}
Conversion.ABT <- function(abt, a)
{
print("hi")
}
Conversion("as")
x <- "asd"
class(x) <- "ABT"
Conversion(x)
Conversion.ABT <- function(abt, a)
{
print(paste("hi", a))
}
Conversion(x)
Conversion(x, "asd")
Conversion <- function( abt )
{
UseMethod("Conversion", abt, a = "asd")
}
Conversion(x, "asd")
Conversion(x)
Conversion <- function( abt, ... )
{
UseMethod("Conversion", abt)
}
Conversion(x)
Conversion(x, a = "asd")
Conversion <- function( abt, ... )
{
UseMethod("Conversion", abt)
}
Conversion.ABT <- function(abt, ...)
{
print(paste("hi", a))
}
Conversion(x, a = "asd")
Conversion(x)
"a" == "a"
"a" == "a" == "a"
Conversion <- function( abt, feats, ref )
{
stopifnot(nrow(feats) == ncol(abt), nrow(feats) == nrow(ref))
stopifnot(ncol(feats) == ncol(ref), ncol(feats) == c("name", "value"))
idx <- numeric()
ref <- paste(ref$name, ref$value, sep = ":")
feats <- paste(feats$name, feats$value, sep = ":")
for( i in ref ) idx <- append(idx, if(i %in% feats) which(feats == i) else 0)
idx
blank <- rep(0, nrow(abt))
out <- do.call(cbind, lapply(idx, function(x) if(x == 0) blank else abt[, x]))
return(out)
}
abt1 <- matrix(1:60, 10, 6)
feats1 <- data.frame(name = rep(letters[1:3], each = 2), value = letters[1:6])
feats2 <- data.frame(name =c("a", "b", "b", "b", "c", "c", "a", "d", "d"),
value = c("b", "c", "d", "a", "a", "f", "a", "a", "b"))
exp <- cbind(1:10, 11:20, 21:30, 31:40, rep(0, 10), 51:60)
Conversion(abt1, feats1, feats2)
Convert <- function( abt, feats, ref )
{
stopifnot(nrow(feats) == ncol(abt))
stopifnot(colnames(ref) == c("name", "value"), colnames(feats) == c("name", "value"))
idx <- numeric()
ref <- paste(ref$name, ref$value, sep = ":")
feats <- paste(feats$name, feats$value, sep = ":")
for( i in ref ) idx <- append(idx, if(i %in% feats) which(feats == i) else 0)
idx
blank <- rep(0, nrow(abt))
out <- do.call(cbind, lapply(idx, function(x) if(x == 0) blank else abt[, x]))
return(out)
}
?convert
Convert(abt1, feats1, feats2)
Convert(abt1, feats2, feats1)
expect_error(Convert(abt1, feats2, feats1))
res <- Convert(abt1, feats1, feats2)
abt2 <- cbind(11:20, 21:30, 31:40, rep(0,10), rep(0,10), 51:60, 1:10, rep(0,10), rep(0,10))
expect_equal(abt1, abt2)
expect_equal(res, abt2)
Convert(abt2, feats2, feats1)
abt1[, 5] <- 0
abt1
expect_equal(abt1, abt2)
expect_equal(abt1, res)
res <- Convert(abt2, feats2, feats1)
expect_equal(abt1, res)
abt1 <- matrix(1:20, 5,4)
letters[1:4]
feats1 <- data.frame(name = letters[1:4], value = letters[4:1])
feats1 <- data.frame(name = letters[1:4], value = letters[4:1])
feats2 <- data.frame(name = rep(letters[1:2], 2), rep(letters[1:2], each = 2))
Convert(abt1, feats1, feats2)
feats2 <- data.frame(name = rep(letters[1:2], 2), value = rep(letters[1:2], each = 2))
Convert(abt1, feats1, feats2)
feats1
feats2
feats1 <- data.frame(name = letters[1:4], value = letters[1:4])
Convert(abt1, feats1, feats2)
roxygen2::roxygenise()
devtools::install()
library(testthat)
test_dir("./inst/tests")
