binominal()
model <- glm(
as.factor(abt[,11]) ~ abt[,1] + as.factor(abt[,2]) + abt[,3] + abt[,4] + abt[,5] + abt[,6] + abt[,7] + abt[,8] + as.factor(abt[,9]) + as.factor(abt[,10]),
family = binomial)
model
summary(model)
model$coefficients
length(model$coefficients)
anova(model, test="Chisq")
predict(model, newdata = abt[,11])
library(abacus)
Create_testDB("./db")
db <- "db/test.db"
transactions <- Select("transactions", db)
ta <- Select("transactions", db)
pa <- Select("personalAccounts", db)
View(transactions)
rm(transactions)
colnames(ta)
?substr
strtrim(ta$payor_iban, width = 2)
payor_country <- ta$payor_iban, width = 2
payor_country <- strtrim(ta$payor_iban, width = 2)
unique(payor_country)
payor_country <- unique(payor_country)
x <- strtrim(ta$payor_iban, width = 2)
x <- unique(x)
payor_country <- list()
?grepl
for(i in x) payor_country <- append(payor_country, grepl(tolower(i), tolower(ta$payor_iban)))
payor_country <- list()
for(i in x) payor_country <- append(payor_country, list(i = grepl(tolower(i), tolower(ta$payor_iban))))
eval(i)
payor_country <- list()
for(i in x) payor_country <- append(payor_country, list(eval(i) = grepl(tolower(i), tolower(ta$payor_iban))))
payor_country <- list()
for(i in x) payor_country <- payor_country[[i]] <- grepl(tolower(i), tolower(ta$payor_iban))
payor_country <- list()
x
grepl(tolower(i), tolower(ta$payor_iban))
for(i in x) payor_country <- payor_country[[i]] <- grepl(tolower(i), tolower(ta$payor_iban))
a <- list()
for(i in x) a[[i]] <- 1:10
a
payor_country <- list()
for(i in x) payor_country[[i]] <- grepl(tolower(i), tolower(ta$payor_iban))
x <- strtrim(ta$payee_iban, width = 2)
x <- unique(x)
x
payee_country <- list()
for(i in x) payee_country[[i]] <- grepl(tolower(i), tolower(ta$payee_iban))
a <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payee_iban)))
names(a) <- x
identical(a, payee_country)
colnames(ta)
ta$payor_id[1:10] %in% pa$account_id
1:10 %in% c(2, 9)
payor_pa <- ta$payor_id %in% pa$account_id
payee_pa <- ta$payee_id %in% pa$account_id
x <- strtrim(ta$payor_bic, width = 4)
x <- unique(x)
x
payor_bank <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payor_bic)))
x <- strtrim(ta$payee_bic, width = 4)
x <- unique(x)
x
payee_bank <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payee_bic)))
ta$payor_owner[1:10]
ta$payee_owner[1:10]
?gsub
x <- strtrim(ta$payor_bic, width = 4)
x <- unique(x)
payor_bank <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payor_bic)))
names(payor_bank) <- tolower(x)
x <- strtrim(ta$payee_bic, width = 4)
x <- unique(x)
payee_bank <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payee_bic)))
names(payee_bank) <- tolower(x)
gsub("s|w", "", tolower(ta$payee_owner[1:10]))
strsplit(tolower(ta$payor_owner[1:2]), " ")
c(1:3)
unlist(c(1:3))
x <- unique(unlist(strsplit(tolower(ta$payor_owner[1:2]), " ")))
x
payor_owner <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payor_owner)))
x
names(payor_owner) <- x
x <- unique(unlist(strsplit(tolower(ta$payee_owner[1:2]), " ")))
x
payee_owner <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payee_owner)))
names(payee_owner) <- x
x <- unique(unlist(strsplit(tolower(ta$payor_owner), " ")))
x
payor_owner <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payor_owner)))
names(payor_owner) <- x
x <- unique(unlist(strsplit(tolower(ta$payee_owner), " ")))
x
payee_owner <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payee_owner)))
names(payee_owner) <- x
colnames(ta)
ta$value[1:10] %% 5
ta$value[1:10]
(ta$value[1:10] %% 5 == 0)
value <- list(mod5 = ta$value %% 5 == 0, mod50 = ta$value %% 50 == 0, mod100 = ta$value %% 100 == 0, raw = ta$value)
colnames(ta)
ta$reference[1:10]
gsub("[0-9]", "", ta$reference[1:10])
gsub("[0-9,]", "", ta$reference[1:10])
gsub("[0-9,]", "", ta$reference[100:110])
gsub("[0-9,]", "", tolower(ta$reference[100:110]))
gsub("[0-9,]", "", tolower(ta$reference[200:210]))
gsub("[0-9,;]", "", tolower(ta$reference[200:210]))
gsub("[0-9,;]", "", tolower(ta$reference[300:310]))
gsub("[0-9,;\+]", "", tolower(ta$reference[300:310]))
gsub("[0-9,;\\+]", "", tolower(ta$reference[300:310]))
gsub("[0-9,;\\+-]", "", tolower(ta$reference[300:310]))
gsub("[0-9-]", " ", "asd023893 029-020")
gsub("[0-9*]", " ", "asd023893 029*020")
gsub("[0-9*]", "", "asd023893 029*020")
gsub("[0-9/]", "", "asd023893 029/020")
gsub("^[a-z ]", "", "asd023893 029/020")
gsub("[^a-z ]", "", "asd023893 029/020")
gsub("[a-z ]", "", tolower(ta$reference[300:310]))
gsub("[^a-z ]", "", tolower(ta$reference[300:310]))
gsub("[^a-z ]", "", tolower(ta$reference[900:910]))
refs <- gsub("[^a-z ]", "", tolower(ta$reference))
x <- unique(refs)
x
strsplit(unique(refs[1:2]))
strsplit(unique(refs[1:2]), " ")
unique(refs[1:2])
x <- unlist(strsplit(unique(refs), " "))
x
refs <- lapply(x, function(x) grepl(tolower(x), refs))
names(references) <- x
rm(refs)
references <- gsub("[^a-z ]", "", tolower(ta$reference))
x <- unlist(strsplit(unique(references), " "))
references <- lapply(x, function(x) grepl(tolower(x), references))
names(references) <- x
rm(references)
reference <- gsub("[^a-z ]", "", tolower(ta$reference))
x <- unlist(strsplit(unique(reference), " "))
reference <- lapply(x, function(x) grepl(tolower(x), reference))
names(reference) <- x
colnames(ta)
entry <- gsub("[^a-z ]", "", tolower(ta$entry))
x <- unlist(strsplit(unique(entry), " "))
x
entry <- lapply(x, function(x) grepl(tolower(x), entry))
names(entry) <- x
value <- list(mod5 = ta$value %% 5 == 0, mod50 = ta$value %% 50 == 0, mod100 = ta$value %% 100 == 0, raw = ta$value)
a <- list(a = 1:10, b = 10:1)
?do.call
do.call(rbind, a)
do.call(cbind, a)
as.data.frame(do.call(cbind, a))
length(payor_country)
featureList <- data.frame(
name = c(rep("payor_country", length(payor_country)), rep("payee_country", length(payee_country))),
value = c(names(payor_country), names(payee_country)),
stringsAsFactors = FALSE)
featureList <- data.frame(
name = c(rep("payor_country", length(payor_country)), rep("payee_country", length(payee_country)), rep("payor_bank", length(payor_bank)),
rep("payee_bank"), length(payee_bank), rep("payor_owner", length(payor_owner)), rep("payee_owner", length(payee_owner))),
value = c(names(payor_country), names(payee_country), names(payor_bank), names(payee_bank), names(payor_owner), names(payee_owner)),
stringsAsFactors = FALSE)
featureList <- data.frame(
name = c(rep("payor_country", length(payor_country)), rep("payee_country", length(payee_country)), rep("payor_bank", length(payor_bank)),
rep("payee_bank", length(payee_bank)), rep("payor_owner", length(payor_owner)), rep("payee_owner", length(payee_owner))),
value = c(names(payor_country), names(payee_country), names(payor_bank), names(payee_bank), names(payor_owner), names(payee_owner)),
stringsAsFactors = FALSE)
x <- unique(tolower(ta$payee_owner))
x <- unique(tolower(ta$payor_owner))
payor_owner <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payor_owner)))
names(payor_owner) <- x
x <- unique(tolower(ta$payee_owner))
payee_owner <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payee_owner)))
names(payee_owner) <- x
featureList <- data.frame(
name = c(rep("payor_country", length(payor_country)), rep("payee_country", length(payee_country)), rep("payor_bank", length(payor_bank)),
rep("payee_bank", length(payee_bank)), rep("payor_owner", length(payor_owner)), rep("payee_owner", length(payee_owner))),
value = c(names(payor_country), names(payee_country), names(payor_bank), names(payee_bank), names(payor_owner), names(payee_owner)),
stringsAsFactors = FALSE)
pa$account_id %in% ta$payor_id
which(pa$account_id %in% ta$payor_id)
pa$account_id
x <- pa$account_id[pa$account_id %in% ta$payor_id]
payor_pa <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payor_id)))
names(payor_pa) <- x
sum(payor_pa$1)
sum(payor_pa$"1")
sum(payor_pa$"2")
names(reference) <- paste0("id_", x)
x <- pa$account_id[pa$account_id %in% ta$payee_id]
payee_pa <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payee_id)))
names(payee_pa) <- paste0("id_", x)
x <- unique(strtrim(ta$payor_iban, width = 2))
payor_country <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payor_iban)))
names(payor_country) <- tolower(x)
x <- unique(strtrim(ta$payee_iban, width = 2))
payee_country <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payee_iban)))
names(payee_country) <- tolower(x)
# bank code
x <- unique(strtrim(ta$payor_bic, width = 4))
payor_bank <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payor_bic)))
names(payor_bank) <- tolower(x)
x <- unique(strtrim(ta$payee_bic, width = 4))
payee_bank <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payee_bic)))
names(payee_bank) <- tolower(x)
# owners
x <- unique(tolower(ta$payor_owner))
payor_owner <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payor_owner)))
names(payor_owner) <- x
x <- unique(tolower(ta$payee_owner))
payee_owner <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payee_owner)))
names(payee_owner) <- x
# own accounts
x <- pa$account_id[pa$account_id %in% ta$payor_id]
payor_pa <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payor_id)))
names(payor_pa) <- paste0("id_", x)
x <- pa$account_id[pa$account_id %in% ta$payee_id]
payee_pa <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payee_id)))
names(payee_pa) <- paste0("id_", x)
# reference
reference <- gsub("[^a-z ]", "", tolower(ta$reference))
x <- unlist(strsplit(unique(reference), " "))
reference <- lapply(x, function(x) grepl(tolower(x), reference))
names(reference) <- x
# entry
entry <- gsub("[^a-z ]", "", tolower(ta$entry))
x <- unlist(strsplit(unique(entry), " "))
entry <- lapply(x, function(x) grepl(tolower(x), entry))
names(entry) <- x
featureList <- data.frame(
name = c( rep("payor_country", length(payor_country)), rep("payee_country", length(payee_country)), rep("payor_bank", length(payor_bank)),
rep("payee_bank", length(payee_bank)), rep("payor_owner", length(payor_owner)), rep("payee_owner", length(payee_owner)),
rep("payor_pa", length(payor_pa)), rep("payee_pa", length(payee_pa)), rep("reference", length(reference)),
rep("entry", length(entry)), rep("value", length(value)) ),
value = c( names(payor_country), names(payee_country), names(payor_bank), names(payee_bank), names(payor_owner), names(payee_owner),
names(payor_pa), names(payee_pa), names(reference), names(entry), names(value) ),
stringsAsFactors = FALSE)
# country code
x <- sort(unique(strtrim(ta$payor_iban, width = 2)))
payor_country <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payor_iban)))
names(payor_country) <- tolower(x)
x <- sort(unique(strtrim(ta$payee_iban, width = 2)))
payee_country <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payee_iban)))
names(payee_country) <- tolower(x)
# bank code
x <- sort(unique(strtrim(ta$payor_bic, width = 4)))
payor_bank <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payor_bic)))
names(payor_bank) <- tolower(x)
x <- sort(unique(strtrim(ta$payee_bic, width = 4)))
payee_bank <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payee_bic)))
names(payee_bank) <- tolower(x)
# owners
x <- sort(unique(tolower(ta$payor_owner)))
payor_owner <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payor_owner)))
names(payor_owner) <- x
x <- sort(unique(tolower(ta$payee_owner)))
payee_owner <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payee_owner)))
names(payee_owner) <- x
# own accounts
x <- sort(pa$account_id[pa$account_id %in% ta$payor_id])
payor_pa <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payor_id)))
names(payor_pa) <- paste0("id_", x)
x <- sort(pa$account_id[pa$account_id %in% ta$payee_id])
payee_pa <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payee_id)))
names(payee_pa) <- paste0("id_", x)
# reference
reference <- sort(gsub("[^a-z ]", "", tolower(ta$reference)))
x <- unlist(strsplit(unique(reference), " "))
reference <- lapply(x, function(x) grepl(tolower(x), reference))
names(reference) <- x
# entry
entry <- sort(gsub("[^a-z ]", "", tolower(ta$entry)))
x <- unlist(strsplit(unique(entry), " "))
entry <- lapply(x, function(x) grepl(tolower(x), entry))
names(entry) <- x
# value
value <- list(mod5 = ta$value %% 5 == 0, mod50 = ta$value %% 50 == 0, mod100 = ta$value %% 100 == 0, raw = ta$value)
# create feature list
featureList <- data.frame(
name = c( rep("payor_country", length(payor_country)), rep("payee_country", length(payee_country)), rep("payor_bank", length(payor_bank)),
rep("payee_bank", length(payee_bank)), rep("payor_owner", length(payor_owner)), rep("payee_owner", length(payee_owner)),
rep("payor_pa", length(payor_pa)), rep("payee_pa", length(payee_pa)), rep("reference", length(reference)),
rep("entry", length(entry)), rep("value", length(value)) ),
value = c( names(payor_country), names(payee_country), names(payor_bank), names(payee_bank), names(payor_owner), names(payee_owner),
names(payor_pa), names(payee_pa), names(reference), names(entry), names(value) ),
stringsAsFactors = FALSE)
a
b <- list(c = letters[1:10], d = letters[11:20])
do.call(cbind, list(a,b))
feats <- c("payor_country", "payee_country", "payor_bank", "payee_bank", "payor_owner", "payee_owner", "payor_pa", "payee_pa",
"reference", "entry", "value")
get(feats[1])
rep(feats[1], length(get(feats[1])))
sapply(c("a", "b"), function(x) rep(x, length(get(x))))
lapply(c("a", "b"), function(x) rep(x, length(get(x))))
unlist(lapply(c("a", "b"), function(x) rep(x, length(get(x)))))
feats <- c("payor_country", "payee_country", "payor_bank", "payee_bank", "payor_owner", "payee_owner", "payor_pa", "payee_pa",
"reference", "entry", "value")
test <- unlist(lapply( feats, function(x) rep(x, length(get(x))) ))
length(test)
identical(test, featureList$name)
lapply(c("a", "b"), function(x) names(x))
lapply(c("a", "b"), function(x) names(get(x)))
unlist(lapply(c("a", "b"), function(x) names(get(x))))
test <- unlist(lapply( feats, function(x) names(get(x)) ))
identical(test, featureList$value)
lapply(c("a", "b"), function(x) get(x))
unlist(lapply(c("a", "b"), function(x) get(x)), recursive = FALSE)
do.call(cbind, unlist(lapply(c("a", "b"), function(x) get(x)), recursive = FALSE))
as.data.frame(do.call(cbind, unlist(lapply(c("a", "b"), function(x) get(x)), recursive = FALSE)))
as.data.frame(do.call(cbind, unlist(lapply(c("a", "b"), get), recursive = FALSE)))
abt <- as.data.frame(do.call(cbind, unlist(lapply(feats, get), recursive = FALSE)))
str(abt)
db <- "db/test.db"
ta <- Select("transactions", db)
pa <- Select("personalAccounts", db)
x <- sort(unique(strtrim(ta$payor_iban, width = 2)))
payor_country <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payor_iban)))
names(payor_country) <- paste0("code_", tolower(x))
x <- sort(unique(strtrim(ta$payee_iban, width = 2)))
payee_country <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payee_iban)))
names(payee_country) <- paste0("code_", tolower(x))
x <- sort(unique(strtrim(ta$payor_bic, width = 4)))
payor_bank <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payor_bic)))
names(payor_bank) <- paste0("code_", tolower(x))
x <- sort(unique(strtrim(ta$payee_bic, width = 4)))
payee_bank <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payee_bic)))
names(payee_bank) <- paste0("code_", tolower(x))
x <- sort(unique(tolower(ta$payor_owner)))
payor_owner <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payor_owner)))
names(payor_owner) <- paste0("name_", x)
x <- sort(unique(tolower(ta$payee_owner)))
payee_owner <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payee_owner)))
names(payee_owner) <- paste0("name_", x)
names(payor_owner)
x <- sort(pa$account_id[pa$account_id %in% ta$payor_id])
payor_pa <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payor_id)))
names(payor_pa) <- paste0("id_", x)
x <- sort(pa$account_id[pa$account_id %in% ta$payee_id])
payee_pa <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payee_id)))
names(payee_pa) <- paste0("id_", x)
reference <- sort(gsub("[^a-z ]", "", tolower(ta$reference)))
x <- unlist(strsplit(unique(reference), " "))
reference <- lapply(x, function(x) grepl(tolower(x), reference))
names(reference) <- paste0("ref_", x)
entry <- sort(gsub("[^a-z ]", "", tolower(ta$entry)))
x <- unlist(strsplit(unique(entry), " "))
entry <- lapply(x, function(x) grepl(tolower(x), entry))
names(entry) <- paste0("entry_", x)
value <- list(mod5 = ta$value %% 500 == 0, mod50 = ta$value %% 5000 == 0, mod100 = ta$value %% 10000 == 0, raw = ta$value)
feats <- c( "payor_country", "payee_country", "payor_bank", "payee_bank", "payor_owner", "payee_owner", "payor_pa", "payee_pa",
"reference", "entry", "value")
featureList <- data.frame(
name = unlist(lapply( feats, function(x) rep(x, length(get(x))) )),
value = unlist(lapply( feats, function(x) names(get(x)) )),
stringsAsFactors = FALSE)
abt <- as.data.frame(do.call(cbind, unlist(lapply(feats, get), recursive = FALSE)))
abt <- do.call(cbind, unlist(lapply(feats, get), recursive = FALSE))
colnames(abt)[100:120]
# country code
x <- sort(unique(strtrim(ta$payor_iban, width = 2)))
payor_country <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payor_iban)))
names(payor_country) <- tolower(x)
x <- sort(unique(strtrim(ta$payee_iban, width = 2)))
payee_country <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payee_iban)))
names(payee_country) <- tolower(x)
# bank code
x <- sort(unique(strtrim(ta$payor_bic, width = 4)))
payor_bank <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payor_bic)))
names(payor_bank) <- tolower(x)
x <- sort(unique(strtrim(ta$payee_bic, width = 4)))
payee_bank <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payee_bic)))
names(payee_bank) <- tolower(x)
# owners
x <- sort(unique(tolower(ta$payor_owner)))
payor_owner <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payor_owner)))
names(payor_owner) <- x
x <- sort(unique(tolower(ta$payee_owner)))
payee_owner <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payee_owner)))
names(payee_owner) <- x
# own accounts
x <- sort(pa$account_id[pa$account_id %in% ta$payor_id])
payor_pa <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payor_id)))
names(payor_pa) <- x
x <- sort(pa$account_id[pa$account_id %in% ta$payee_id])
payee_pa <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payee_id)))
names(payee_pa) <- x
# reference
reference <- sort(gsub("[^a-z ]", "", tolower(ta$reference)))
x <- unlist(strsplit(unique(reference), " "))
reference <- lapply(x, function(x) grepl(tolower(x), reference))
names(reference) <- x
# entry
entry <- sort(gsub("[^a-z ]", "", tolower(ta$entry)))
x <- unlist(strsplit(unique(entry), " "))
entry <- lapply(x, function(x) grepl(tolower(x), entry))
names(entry) <- x
# value
value <- list(mod5 = ta$value %% 500 == 0, mod50 = ta$value %% 5000 == 0, mod100 = ta$value %% 10000 == 0, raw = ta$value)
# create feature list
feats <- c( "payor_country", "payee_country", "payor_bank", "payee_bank", "payor_owner", "payee_owner", "payor_pa", "payee_pa",
"reference", "entry", "value")
featureList <- data.frame(
name = unlist(lapply( feats, function(x) rep(x, length(get(x))) )),
value = unlist(lapply( feats, function(x) names(get(x)) )),
stringsAsFactors = FALSE)
abt <- do.call(cbind, unlist(lapply(feats, get), recursive = FALSE))
colnames(abt[100:130])
rownames(abt[100:130])
abt[1:10, 1:10]
abt[100:110, 100:110]
library(sda)
as.factor(ta$type[1:10])
ranked <- sda.ranking(abt, as.factor(ta$type))
plot(ranked)
trained <- sda(abt, as.factor(ta$type))
predicted <- predict(trained, abt)
strng <- 0.0 # beste 0.0 mit 0.85
post <- apply(predicted$posterior, 1, max)
sum(predicted$class[post > strng] == as.factor(ta$type)[post > strng]) / 100
sum(predicted$class[post > strng] == as.factor(ta$type)[post > strng])
predicted$class[1:10]
ta$type[1:10]
str(ranked)
plot(ncol(ranked))
ncol(ranked)
nrow(ranked)
plot(1:nrow(ranked), ranked[, 2])
plot(1:nrow(ranked), log(ranked[, 2]))
hline(median(ranked[, 2]))
line(y = median(ranked[, 2]))
abline(y = median(ranked[, 2]))
abline(h = median(ranked[, 2]))
median(ranked[, 2])
median(ranked[, 2])
median(ranked[, 2])
abline(h = log(median(ranked[, 2])))
abline(v = nrow(ranked) / 2)
db <- "db/test.db"
ta <- Select("transactions", db)
pa <- Select("personalAccounts", db)
# country code
x <- sort(unique(strtrim(ta$payor_iban, width = 2)))
payor_country <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payor_iban)))
names(payor_country) <- tolower(x)
x <- sort(unique(strtrim(ta$payee_iban, width = 2)))
payee_country <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payee_iban)))
names(payee_country) <- tolower(x)
# bank code
x <- sort(unique(strtrim(ta$payor_bic, width = 4)))
payor_bank <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payor_bic)))
names(payor_bank) <- tolower(x)
x <- sort(unique(strtrim(ta$payee_bic, width = 4)))
payee_bank <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payee_bic)))
names(payee_bank) <- tolower(x)
# owners
x <- sort(unique(tolower(ta$payor_owner)))
payor_owner <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payor_owner)))
names(payor_owner) <- x
x <- sort(unique(tolower(ta$payee_owner)))
payee_owner <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payee_owner)))
names(payee_owner) <- x
# own accounts
x <- sort(pa$account_id[pa$account_id %in% ta$payor_id])
payor_pa <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payor_id)))
names(payor_pa) <- x
x <- sort(pa$account_id[pa$account_id %in% ta$payee_id])
payee_pa <- lapply(x, function(x) grepl(tolower(x), tolower(ta$payee_id)))
names(payee_pa) <- x
# reference
reference <- sort(gsub("[^a-z ]", "", tolower(ta$reference)))
x <- unlist(strsplit(unique(reference), " "))
reference <- lapply(x, function(x) grepl(tolower(x), reference))
names(reference) <- x
# entry
entry <- sort(gsub("[^a-z ]", "", tolower(ta$entry)))
x <- unlist(strsplit(unique(entry), " "))
entry <- lapply(x, function(x) grepl(tolower(x), entry))
names(entry) <- x
# value
value <- list(mod5 = ta$value %% 500 == 0, mod50 = ta$value %% 5000 == 0, mod100 = ta$value %% 10000 == 0, ge100 = ta$value >= 10000)
# create feature list and abt
feats <- c( "payor_country", "payee_country", "payor_bank", "payee_bank", "payor_owner", "payee_owner", "payor_pa", "payee_pa",
"reference", "entry", "value")
featureList <- data.frame(
name = unlist(lapply( feats, function(x) rep(x, length(get(x))) )),
value = unlist(lapply( feats, function(x) names(get(x)) )),
stringsAsFactors = FALSE)
abt <- do.call(cbind, unlist(lapply(feats, get), recursive = FALSE))
library(sda)
ranked <- sda.ranking(abt, as.factor(ta$type))
plot(ranked)
trained <- sda(abt, as.factor(ta$type))
predicted <- predict(trained, abt)
strng <- 0.0 # beste 0.0 mit 0.85
post <- apply(predicted$posterior, 1, max)
sum(predicted$class[post > strng] == as.factor(ta$type)[post > strng])
plot(1:nrow(ranked), ranked[, 2])
plot(1:nrow(ranked), log(ranked[, 2]))
hist(post)
hist(post[1:10])
post[1:10]
hist(post[100:110])
post[100:110]
density(post)
unique(post)
hist(predicted$posterior)
