% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Evaluate_Predictor.R
\name{Evaluate_Predictor}
\alias{Evaluate_Predictor}
\title{Evaluate_Predictor}
\usage{
Evaluate_Predictor(db, nFold = 5)
}
\arguments{
\item{db}{\code{chr} the database used / file name and path of database}

\item{nFold}{\code{int} (=5) for n-fold cross validation}
}
\value{
\code{TRUE} if sucessful, otherwise a \code{chr} message where the algorithm stopped.
}
\description{
The algorithm updates the prediction model according to the current database and then does
a n-fold cross validation with the same settings.
}
\details{
\enumerate{
 \item Hyperparameters for the predictor are read from the \emph{storage} table (\emph{Params}). 
 Then, \code{\link{Update_Predictor}} is run with these parameters.
 \item Table \emph{transactions} is read according to hyperparameters and INNER JOINed with \emph{accounts}.
 \item Table \emph{personalAccounts} is read and INNER JOINed with \emph{accounts}.
 \item A \code{\link{FeatureExtraction}} is done with the tables.
 \item A \code{\link{CV}} (cross validation) is done to calculate an error estimate.
 \item \code{\link{sda::sda.ranking}} is run if there are more features than the maximum number of features
 specified in the Hyperparameters. This is a ranking based on correlation-adjusted t scores.
 With this ranking features are selected during the \code{\link{Training}} of the predictor.
 \item Table \emph{Storage} is updated with the resulting \emph{Err} and \emph{Ranking}.
}

If there are to few transactions used for training (per corss validation round), 
the predcitor might not work.
It depends on how well the different types (labels) are represented, 
but as a rule of thumb there should be a minimum of 20 transactions.
So, with a 5-fold cross validation that is at least 100 transactions.
}
\examples{
db <- "test.db"
Create_testDB(db)

params <- list(nFeats = 200, DDL = FALSE, time = list(start = as.Date("2010-1-1"), end = as.Date("2011-1-1")))
InsertBLOB("Params", params, db)
Evaluate_Predictor(db)
err <- SelectBLOB("Err", db)
ranks <- SelectBLOB("Ranking", db)

}
\seealso{
Other procedures: \code{\link{Update_Predictor}}
}

